{"name": "test_select_customer[params1]", "status": "failed", "statusDetails": {"message": "AssertionError: 响应结果不在预期内!", "trace": "self = <WMS.Scripts.test_002_selectCustomer.TestSelectCustomer object at 0x000002D793222A20>\nparams = {'address': None, 'customerLevel': None, 'customerName': '123', 'customerNo': '', ...}\n\n    @allure.description(\"用户查询接口接口测试用例\")\n    @allure.severity(\"critical\")\n    @pytest.mark.parametrize('params', YamlUtil.get_yaml(get_yaml_path(\"select_customer_data.yaml\")))\n    def test_select_customer(self, params):\n        response2 = requests.post(url=\"http://192.168.10.128:9632/wms/customer/list?page=0&size=10\",\n                                  json={\n                                      \"customerNo\": params[\"customerNo\"],\n                                      \"customerName\": params[\"customerName\"],\n                                      \"address\": params[\"address\"],\n                                      \"mobile\": params[\"mobile\"],\n                                      \"tel\": params[\"tel\"],\n                                      \"customerPerson\": params[\"customerPerson\"],\n                                      \"customerLevel\": params[\"customerLevel\"],\n                                      \"email\": params[\"email\"]\n                                  },\n                                  headers={\"Authorization\": TokenUtil.get_token()}\n                                  )\n        # 通过对每一条用例的所有查询结果的content键的值进行循环,可以判断前端给的数据是通过哪种方式查询\n        for i in response2.json()[\"content\"]:\n            # 如果遍历的每条结果的customerNo都跟前端传入的数据的值一样,那么就证明用户通过customerNo查询\n            if i[\"customerNo\"] == params[\"customerNo\"]:\n                # 通过查询结果中的id字段<主键>的值去数据库查询只会获得唯一一条数据,看返回数据的编号是不是结果的编号,验证数据准确性\n                sql = f\"select customer_no from wms_customer where id = {i[\"id\"]}\"\n                self.cursor.execute(sql)  # 执行sql 这个东西有返回值 返回值是响应行数 逆天!\n                # 看接口响应结果的编号和数据库返回的编号是否一致,验证数据准确性\n                assert self.cursor.fetchone()[0] == i[\"customerNo\"]\n                LoggerUtil.logger.info(f\"接口响应符合预期,用例执行成功,查询提交参数是:{params}\")\n            elif i[\"customerName\"] == params[\"customerName\"]:\n                LoggerUtil.logger.info(f\"接口响应符合预期,用例执行成功,查询提交参数是:{params}\")\n            elif i[\"customerLevel\"] == params[\"customerLevel\"]:\n                # 通过查询结果中的id字段<主键>的值去数据库查询只会获得唯一一条数据,看返回数据的等级是不是结果的等级,验证数据准确性\n                sql = f\"select customer_level from wms_customer where id = {i[\"id\"]}\"\n                self.cursor.execute(sql)  # 执行sql 这个东西有返回值 返回值是响应行数 逆天!\n                # 看接口响应结果的编号和数据库返回的编号是否一致,验证数据准确性\n                assert self.cursor.fetchone()[0] == i[\"customerLevel\"]\n                LoggerUtil.logger.info(f\"接口响应符合预期,用例执行成功,查询提交参数是:{params}\")\n            elif i[\"customerPerson\"] == params[\"customerPerson\"]:\n                # 通过查询结果中的id字段<主键>的值去数据库查询只会获得唯一一条数据,看返回数据的联系人是不是结果的联系人,验证数据准确性\n                sql = f\"select customer_person from wms_customer where id = {i[\"id\"]}\"\n                self.cursor.execute(sql)  # 执行sql 这个东西有返回值 返回值是响应行数 逆天!\n                # 看接口响应结果的编号和数据库返回的编号是否一致,验证数据准确性\n                assert self.cursor.fetchone()[0] == i[\"customerPerson\"]\n                LoggerUtil.logger.info(f\"接口响应符合预期,用例执行成功,查询提交参数是:{params}\")\n            else:\n                LoggerUtil.logger.error(f\"接口响应失败!不符合预期,查询提交参数是:{params}\")\n>               raise AssertionError(\"响应结果不在预期内!\")\nE               AssertionError: 响应结果不在预期内!\n\nWMS\\Scripts\\test_002_selectCustomer.py:73: AssertionError"}, "description": "用户查询接口接口测试用例", "attachments": [{"name": "log", "source": "67e6a795-da65-4b93-a6ad-07ea955d3087-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "params", "value": "{'customerNo': '', 'customerName': '123', 'address': None, 'mobile': None, 'tel': None, 'customerPerson': None, 'customerLevel': None, 'email': None}"}], "start": 1717163950041, "stop": 1717163950132, "uuid": "7856c6cc-3e16-48ce-9c24-5116c0cd3ac4", "historyId": "b511cdd76956e030f23a3dd36975764f", "testCaseId": "0b126d2c57a11b62c0c8a5d97a51abfe", "fullName": "WMS.Scripts.test_002_selectCustomer.TestSelectCustomer#test_select_customer", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "WMS仓管系统用户查询接口"}, {"name": "parentSuite", "value": "WMS.Scripts"}, {"name": "suite", "value": "test_002_selectCustomer"}, {"name": "subSuite", "value": "TestSelectCustomer"}, {"name": "host", "value": "SunTianYi"}, {"name": "thread", "value": "18520-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "WMS.Scripts.test_002_selectCustomer"}]}